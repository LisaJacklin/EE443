--Lisa Jacklin
-- EE 443 LAb 6
-- 3/28/2023
--INS_MEM.vhd
---------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.Numeric_STD.ALL;

ENTITY INS_MEM IS
	PORT(
		ADDR : IN STD_LOGIC_VECTOR(15 DOWNTO 0);
		DOUT : OUT STD_LOGIC_VECTOR(15 DOWNTO 0)
	);
END INS_MEM;

ARCHITECTURE INS_MEM_BEHAVIOR OF INS_MEM IS
--	TYPE TWODARR IS ARRAY(INTEGER RANGE <>) OF STD_LOGIC_VECTOR(15 DOWNTO 0);
	
	COMPONENT DCD5x32 IS 
		PORT(
			DCDIN : IN STD_LOGIC_VECTOR(4 DOWNTO 0);
			DCDOUT : OUT STD_LOGIC_VECTOR(31 DOWNTO 0)
		);
	END COMPONENT;
		
	COMPONENT DCD3x8 IS
		PORT(
			S : IN STD_LOGIC_VECTOR(2 DOWNTO 0);
			Q : OUT STD_LOGIC_VECTOR(7 DOWNTO 0)
		);
	END COMPONENT;
	
	TYPE TDARR IS ARRAY(INTEGER RANGE <>) OF
		STD_LOGIC_VECTOR(15 DOWNTO 0);
	
	SIGNAL IMEM : TDARR(0 TO 31);
	SIGNAL RE : STD_LOGIC;
	
BEGIN
	--NOTE THAT THE DECODER WILL ONLY DO WORK WHEN ADDR(15 DOWNTO 6) ARE ZERO
	--NOTE THAT ONLY EVEN MEMORY ADDRESSES ARE USED.		
		PROCESS (ADDR)
			BEGIN
			IF (ADDR(15 DOWNTO 6) = "0000000000") THEN 
						RE <= '1';
			ELSE RE <= '0';
				END IF;		
		END PROCESS;
		
D1: DCD5X32 PORT MAP (ADDR(5 DOWNTO 1), IMEM(STD_LOGIC_VECTOR(15 DOWNTO 0)));
	----ASSIGNING MEMORY-------------------------------------
	PROCESS(IMEM)
		BEGIN
			
			IF (RE <= '1') THEN 
				IMEM(0) <= "0000001010000010"; --ADD R1, R2,....
				IMEM(1) <= "0000110100000100"; --ADD R3, R4,....
				IMEM(2) <= "0001011100000110"; --ADD R5, R6
				IMEM(3) <= "0001101110001000";-- ADD R7, R8
			-----------
				IMEM(4) <= "0010000010001010"; --SUB R1, R2
				IMEM(5) <= "0010100110001100"; --SUB R3, R4
				IMEM(6) <= "0010111000001110";--SUB R5.R6
				IMEM(7) <= "0011101111010000"; --SUB
				
				IMEM(8) <= "0100000010010010"; --AND
				IMEM(9) <= "0100110100010100";--AND	
				IMEM(10) <="0101011100010110";--AND	
				IMEM(11) <="0101101110011000";--AND
				
				IMEM(12) <= "0110000010011010";-- OR
				IMEM(13) <= "0110110100011100";
				IMEM(14) <= "0111011100011110";
				IMEM(15) <= "0111101110100000";
				
				IMEM(16) <= "1000000010100010";--SLT
				IMEM(17) <= "1000110100100100";
				IMEM(18) <= "1001011100100110";
				IMEM(19) <= "1001101110101000";
				
				IMEM(20) <= "1010000010101010";-- LW
				IMEM(21) <= "1010110100101100";
				IMEM(22) <= "1011011100101110";
				IMEM(23) <= "1011101110110000";
				
				IMEM(24) <= "1100000010110010";--SW
				IMEM(25) <= "1100110100110100";
				IMEM(26) <= "1101011100110110";
				IMEM(27) <= "1101101110111000";
				
				IMEM(28) <= "1110000010111010";--BEG
				IMEM(29) <= "1110110100111100";
				IMEM(30) <= "1111011100111110";
				IMEM(31) <= "1111101110000000";
			END IF;
		
		DOUT <= IMEM(TO_INTEGER(UNSIGNED(ADDR(5 DOWNTO 1))));
		
	END PROCESS;

END INS_MEM_BEHAVIOR;